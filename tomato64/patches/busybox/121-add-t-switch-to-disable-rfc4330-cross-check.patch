--- busybox/networking/ntpd.c
+++ busybox/networking/ntpd.c
@@ -72,7 +72,7 @@
 //kbuild:lib-$(CONFIG_NTPD) += ntpd.o
 
 //usage:#define ntpd_trivial_usage
-//usage:	"[-dnqNw"IF_FEATURE_NTPD_SERVER("l] [-I IFACE")"] [-S PROG]"
+//usage:	"[-dnqNwt"IF_FEATURE_NTPD_SERVER("l] [-I IFACE")"] [-S PROG]"
 //usage:	IF_NOT_FEATURE_NTP_AUTH(" [-p PEER]...")
 //usage:	IF_FEATURE_NTP_AUTH(" [-k KEYFILE] [-p [keyno:N:]PEER]...")
 //usage:#define ntpd_full_usage "\n\n"
@@ -82,6 +82,7 @@
 //usage:     "\n	-q	Quit after clock is set"
 //usage:     "\n	-N	Run at high priority"
 //usage:     "\n	-w	Do not set time (only query peers), implies -n"
+//usage:     "\n	-t	Trust network and server, no RFC-4330 cross-checks"
 //usage:     "\n	-S PROG	Run PROG after stepping time, stratum change, and every 11 min"
 //usage:	IF_NOT_FEATURE_NTP_AUTH(
 //usage:     "\n	-p PEER	Obtain time from PEER (may be repeated)"
@@ -160,7 +161,7 @@
  *   datapoints after the step.
  */
 
-#define INITIAL_SAMPLES    3    /* how many samples do we want for init */
+#define INITIAL_SAMPLES    1    /* how many samples do we want for init */
 #define MIN_FREQHOLD      10    /* adjust offset, but not freq in this many first adjustments */
 #define BAD_DELAY_GROWTH   4    /* drop packet if its delay grew by more than this factor */
 
@@ -191,12 +192,12 @@
 
 #define FREQ_TOLERANCE  0.000015 /* frequency tolerance (15 PPM) */
 #define BURSTPOLL       0       /* initial poll */
-#define MINPOLL         5       /* minimum poll interval. std ntpd uses 6 (6: 64 sec) */
+#define MINPOLL         6       /* minimum poll interval. std ntpd uses 6 (6: 64 sec) */
 /* If offset > discipline_jitter * POLLADJ_GATE, and poll interval is > 2^BIGPOLL,
  * then it is decreased _at once_. (If <= 2^BIGPOLL, it will be decreased _eventually_).
  */
 #define BIGPOLL         9       /* 2^9 sec ~= 8.5 min */
-#define MAXPOLL         12      /* maximum poll interval (12: 1.1h, 17: 36.4h). std ntpd uses 17 */
+#define MAXPOLL         16      /* maximum poll interval (12: 1.1h, 17: 36.4h). std ntpd uses 17 */
 /* Actively lower poll when we see such big offsets.
  * With SLEW_THRESHOLD = 0.125, it means we try to sync more aggressively
  * if offset increases over ~0.04 sec
@@ -227,7 +228,7 @@
  * and when it goes below -POLLADJ_LIMIT, we poll_exp--.
  * (Bumped from 30 to 40 since otherwise I often see poll_exp going *2* steps down)
  */
-#define POLLADJ_LIMIT   40
+#define POLLADJ_LIMIT   36
 /* If offset < discipline_jitter * POLLADJ_GATE, then we decide to increase
  * poll interval (we think we can't improve timekeeping
  * by staying at smaller poll).
@@ -366,14 +367,15 @@
 	OPT_q = (1 << 1),
 	OPT_N = (1 << 2),
 	OPT_x = (1 << 3),
-	OPT_k = (1 << 4) * ENABLE_FEATURE_NTP_AUTH,
+	OPT_t = (1 << 4),
+	OPT_k = (1 << 5) * ENABLE_FEATURE_NTP_AUTH,
 	/* Insert new options above this line. */
 	/* Non-compat options: */
-	OPT_w = (1 << (4+ENABLE_FEATURE_NTP_AUTH)),
-	OPT_p = (1 << (5+ENABLE_FEATURE_NTP_AUTH)),
-	OPT_S = (1 << (6+ENABLE_FEATURE_NTP_AUTH)),
-	OPT_l = (1 << (7+ENABLE_FEATURE_NTP_AUTH)) * ENABLE_FEATURE_NTPD_SERVER,
-	OPT_I = (1 << (8+ENABLE_FEATURE_NTP_AUTH)) * ENABLE_FEATURE_NTPD_SERVER,
+	OPT_w = (1 << (5+ENABLE_FEATURE_NTP_AUTH)),
+	OPT_p = (1 << (6+ENABLE_FEATURE_NTP_AUTH)),
+	OPT_S = (1 << (7+ENABLE_FEATURE_NTP_AUTH)),
+	OPT_l = (1 << (8+ENABLE_FEATURE_NTP_AUTH)) * ENABLE_FEATURE_NTPD_SERVER,
+	OPT_I = (1 << (9+ENABLE_FEATURE_NTP_AUTH)) * ENABLE_FEATURE_NTPD_SERVER,
 	/* We hijack some bits for other purposes */
 	OPT_qq = (1 << 31),
 };
@@ -1139,6 +1141,9 @@
 				"unreachable", p->p_dotted);
 		return 0;
 	}
+	if (option_mask32 & OPT_t) /* RFC-4330 check disabled */
+		return 1;
+
 #if 0 /* we filter out such packets earlier */
 	if ((p->lastpkt_status & LI_ALARM) == LI_ALARM
 	 || p->lastpkt_stratum >= MAXSTRAT
@@ -1890,9 +1895,10 @@
 	close(p->p_fd);
 	p->p_fd = -1;
 
-	if ((msg.m_status & LI_ALARM) == LI_ALARM
+	if (!(option_mask32 & OPT_t) /* RFC-4330 check enabled by default */
+	 && ((msg.m_status & LI_ALARM) == LI_ALARM
 	 || msg.m_stratum == 0
-	 || msg.m_stratum > NTP_MAXSTRATUM
+	 || msg.m_stratum > NTP_MAXSTRATUM)
 	) {
 		bb_error_msg("reply from %s: peer is unsynced", p->p_dotted);
 		/*
@@ -2285,7 +2291,7 @@
 	opts = getopt32(argv, "^"
 			"nqNx" /* compat */
 			IF_FEATURE_NTP_AUTH("k:")  /* compat */
-			"wp:*S:"IF_FEATURE_NTPD_SERVER("l") /* NOT compat */
+			"wp:*S:t"IF_FEATURE_NTPD_SERVER("l") /* NOT compat */
 			IF_FEATURE_NTPD_SERVER("I:") /* compat */
 			"d" /* compat */
 			"46aAbgL" /* compat, ignored */
