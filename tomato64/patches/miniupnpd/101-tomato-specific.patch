diff -Naur miniupnpd-2.3.7.orig/configure miniupnpd-2.3.7/configure
--- miniupnpd-2.3.7.orig/configure	2024-08-11 12:39:16.838055049 -0600
+++ miniupnpd-2.3.7/configure	2024-08-11 12:39:44.254092631 -0600
@@ -144,11 +144,11 @@
 	OS_VERSION=$(cat ./os.astlinux)
 fi
 
-# Tomato USB special case
-if [ -f ../shared/tomato_version ]; then
+# Tomato64 special case
+if [ -f $BR2_EXTERNAL_TOMATO64_PATH/version ]; then
 	OS_NAME=Tomato
-	TOMATO_VER=`cat ../shared/tomato_version | cut -d' ' -f2,3`
-	OS_VERSION="Tomato $TOMATO_VER"
+	TOMATO_VER=`cat $BR2_EXTERNAL_TOMATO64_PATH/version`
+	OS_VERSION="Tomato64 $TOMATO_VER"
 fi
 
 # OpenEmbedded special case
@@ -468,8 +468,8 @@
 		FW=iptables
 		;;
 	Tomato)
-		OS_NAME=UPnP
-		OS_URL=http://tomatousb.org/
+		OS_NAME=Tomato64
+		OS_URL=https://tomato64.org/
 		echo "" >> ${CONFIGFILE}
 		echo "#ifndef TOMATO" >> ${CONFIGFILE}
 		echo "#define TOMATO" >> ${CONFIGFILE}
@@ -481,6 +481,7 @@
 		echo "#ifdef TCONFIG_IPV6" >> ${CONFIGFILE}
 		echo "#define ENABLE_IPV6" >> ${CONFIGFILE}
 		echo "#endif" >> ${CONFIGFILE}
+		HAVE_IP_MREQN=1
 		FW=iptables
 		;;
 	Darwin)
@@ -525,7 +526,7 @@
 		echo "#define USE_IPTABLES  1" >> ${CONFIGFILE}
 		echo "# generated by $0 on `date`" > config.mk
 		echo "SRCDIR = ${BASEDIR}" >> config.mk
-		echo "CPPFLAGS += -I." >> config.mk
+		echo "ALL_CPPFLAGS += -I." >> config.mk
 		if [ "$PKG_CONFIG" ] ; then
 			if ${PKG_CONFIG} --exists libiptc ; then
 				IPTABLESVERSION=`${PKG_CONFIG} --modversion libiptc`
@@ -540,21 +541,21 @@
 				     -o \( \( $IPTVER2 -eq 4 \) -a \( $IPTVER3 -ge 3 \) \) \) ] ; then
 					IPTABLES_143=1
 				fi
-				echo "CFLAGS += `${PKG_CONFIG} --cflags libiptc`" >> config.mk
+				echo "ALL_CFLAGS += `${PKG_CONFIG} --cflags libiptc`" >> config.mk
 				echo "LDLIBS += `${PKG_CONFIG} --static --libs-only-l libiptc`" >> config.mk
-				echo "LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libiptc`" >> config.mk
+				echo "ALL_LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libiptc`" >> config.mk
 			else
 				echo "Warning: no libiptc pkg-config found"
 			fi
 			if ${PKG_CONFIG} --atleast-version=1.0.2 libnetfilter_conntrack \
 			   && ${PKG_CONFIG} --atleast-version=1.0.3 libmnl ; then
-				echo "CPPFLAGS += -DUSE_NFCT" >> config.mk
+				echo "ALL_CPPFLAGS += -DUSE_NFCT" >> config.mk
 				echo "LDLIBS += `${PKG_CONFIG} --static --libs-only-l libmnl libnetfilter_conntrack`" >> config.mk
 			fi
 		fi
 		if [ "$IPTABLESPATH" ] ; then
-			echo "CPPFLAGS += -I${IPTABLESPATH}/include/" >> config.mk
-			echo "LDFLAGS += -L${IPTABLESPATH}/libiptc/" >> config.mk
+			echo "ALL_CPPFLAGS += -I${IPTABLESPATH}/include/" >> config.mk
+			echo "ALL_LDFLAGS += -L${IPTABLESPATH}/libiptc/" >> config.mk
 			# to test : change the following test to [ "$OS_NAME" != "OpenWrt" ]
 			if [ -z "$TARGET_OPENWRT" ] ; then
 				IPTABLESVERSION=`grep "\#define VERSION" ${IPTABLESPATH}/config.h | tr -d \" |cut -d" " -f3`
@@ -570,8 +571,14 @@
 				fi
 				if [ "$IPTABLES_143" = "1" ] ; then
 					echo "LDLIBS += ${IPTABLESPATH}/libiptc/.libs/libip4tc.o" >> config.mk
+					if [ "$TCONFIG_IPV6" = "y" ]; then
+						echo "LDLIBS += ${IPTABLESPATH}/libiptc/.libs/libip6tc.o" >> config.mk
+					fi
 				else
 					echo "LDLIBS += ${IPTABLESPATH}/libiptc/libiptc.a" >> config.mk
+					if [ "$TCONFIG_IPV6" = "y" ]; then
+						echo "LDLIBS += ${IPTABLESPATH}/libiptc/libip6tc.a" >> config.mk
+					fi
 				fi
 			else
 				# OpenWrt
@@ -615,7 +622,7 @@
 		echo "#define USE_NFTABLES  1" >> ${CONFIGFILE}
 		echo "# generated by $0 on `date`" > config.mk
 		echo "SRCDIR = ${BASEDIR}" >> config.mk
-		echo "CPPFLAGS += -I." >> config.mk
+		echo "ALL_CPPFLAGS += -I." >> config.mk
 		;;
 	*)
 		echo "Unknown Firewall/packet filtering software [$FW]"
@@ -629,15 +636,15 @@
 	if [ "$PKG_CONFIG" ] ; then
 		if ${PKG_CONFIG} --exists libcap-ng ; then
 			echo "detected libcap-ng `${PKG_CONFIG} --modversion libcap-ng`"
-			echo "CFLAGS += `${PKG_CONFIG} --cflags libcap-ng`" >> config.mk
+			echo "ALL_CFLAGS += `${PKG_CONFIG} --cflags libcap-ng`" >> config.mk
 			echo "LDLIBS += `${PKG_CONFIG} --libs-only-l libcap-ng`" >> config.mk
-			echo "LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libcap-ng`" >> config.mk
+			echo "ALL_LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libcap-ng`" >> config.mk
 			echo "#define HAS_LIBCAP_NG" >> ${CONFIGFILE}
 		elif ${PKG_CONFIG} --exists libcap ; then
 			echo "detected libcap `${PKG_CONFIG} --modversion libcap`"
-			echo "CFLAGS += `${PKG_CONFIG} --cflags libcap`" >> config.mk
+			echo "ALL_CFLAGS += `${PKG_CONFIG} --cflags libcap`" >> config.mk
 			echo "LDLIBS += `${PKG_CONFIG} --libs-only-l libcap`" >> config.mk
-			echo "LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libcap`" >> config.mk
+			echo "ALL_LDFLAGS += `${PKG_CONFIG} --libs-only-L --libs-only-other libcap`" >> config.mk
 			echo "#define HAS_LIBCAP" >> ${CONFIGFILE}
 		fi
 	fi
diff -Naur miniupnpd-2.3.7.orig/Makefile.linux miniupnpd-2.3.7/Makefile.linux
--- miniupnpd-2.3.7.orig/Makefile.linux	2024-08-11 12:39:16.838055049 -0600
+++ miniupnpd-2.3.7/Makefile.linux	2024-08-11 12:39:44.254092631 -0600
@@ -24,24 +24,25 @@
 CONFIG_OPTIONS ?= $(cat .configure.cache)
 CONFIG_OPTIONS += --firewall=iptables
 #CFLAGS = -O -g -DDEBUG
-CFLAGS ?= -Os
-CFLAGS += -fno-strict-aliasing
-CFLAGS += -fno-common
-CFLAGS += -fstack-protector -fPIE
-CFLAGS += -D_FORTIFY_SOURCE=2
-CPPFLAGS += -D_GNU_SOURCE
-CFLAGS += -Wall
-CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
+ALL_CFLAGS ?= -Os
+ALL_CFLAGS += -fno-strict-aliasing
+ALL_CFLAGS += -fno-common
+ALL_CFLAGS += -fstack-protector -fPIE
+ALL_CFLAGS += -D_FORTIFY_SOURCE=2
+ALL_CFLAGS += -D_GNU_SOURCE
+ALL_CFLAGS += -Wall
+ALL_CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
 #CFLAGS += -Wno-missing-field-initializers
 #CFLAGS += -ansi	# iptables headers does use typeof which is a gcc extension
-LDFLAGS += -Wl,-z,now -Wl,-z,relro -pie
+ALL_LDFLAGS += -Wl,-z,now -Wl,-z,relro -pie
+ALL_LDFLAGS += -Wl,--gc-sections -Wl,--as-needed
 CC ?= gcc
 RM = rm -f
 INSTALL = install
 STRIP ?= strip
 PKG_CONFIG ?= pkg-config
 CP = cp
-DOXYGEN ?= doxygen
+#DOXYGEN ?= doxygen
 
 DEPFLAGS = -MM -MG -MT $(patsubst %.d,%.o,$@) -MT $@
 # -M : with system headers, -MM : without
@@ -52,9 +53,13 @@
 MANINSTALLDIR = $(INSTALLPREFIX)/share/man/man8
 
 include config.mk
-include $(SRCDIR)/gitrev.mk
+#include $(SRCDIR)/gitrev.mk
 include $(SRCDIR)/objects.mk
 
+ALL_CPPFLAGS += $(CPPFLAGS)
+ALL_CFLAGS += $(CFLAGS)
+ALL_LDFLAGS += $(LDFLAGS)
+
 # sources in netfilter/ directory
 NETFILTEROBJS = iptcrdr.o iptpinhole.o nfct_get.o
 
@@ -87,12 +92,12 @@
 ifeq ($(TARGET_OPENWRT),)
 LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l libssl)
 
-TEST := $(shell $(PKG_CONFIG) --exists uuid && echo 1)
-ifeq ($(TEST),1)
-LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l uuid)
-else
-$(info please install uuid-dev package / libuuid)
-endif # ($(TEST),1)
+#TEST := $(shell $(PKG_CONFIG) --exists uuid && echo 1)
+#ifeq ($(TEST),1)
+#LDLIBS += $(shell $(PKG_CONFIG) --static --libs-only-l uuid)
+#else
+#$(info please install uuid-dev package / libuuid)
+#endif # ($(TEST),1)
 endif # ($(TARGET_OPENWRT,)
 
 ifneq ($(shell ldd --version | grep GLIBC),)
@@ -107,10 +112,11 @@
 
 TESTUPNPDESCGENOBJS = testupnpdescgen.o upnpdescgen.o
 
-EXECUTABLES = miniupnpd testupnpdescgen testgetifstats \
-              testupnppermissions miniupnpdctl testgetifaddr \
-              testgetroute testasyncsendto testportinuse \
-              testssdppktgen testminissdp
+EXECUTABLES = miniupnpd
+#EXECUTABLES = miniupnpd testupnpdescgen testgetifstats \
+#              testupnppermissions miniupnpdctl testgetifaddr \
+#              testgetroute testasyncsendto testportinuse \
+#              testssdppktgen testminissdp
 
 .PHONY:	all clean install depend dox
 
@@ -195,19 +201,19 @@
 depend:	$(DEP)
 
 %.d:	$(SRCDIR)/%.c
-	$(CC) $(CPPFLAGS) $(DEPFLAGS) -o $@ $<
+	$(CC) $(ALL_CPPFLAGS) $(DEPFLAGS) -o $@ $< $(ALL_LDFLAGS)
 
 dox:	$(SRCDIR)/miniupnpd.doxyconf
 	(cat $< ; echo "INPUT=$(SRCDIR)" ) | $(DOXYGEN) -
 
 %.o:	$(SRCDIR)/%.c
-	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< -o $@ $(ALL_LDFLAGS)
 
 %.o:	$(SRCDIR)/linux/%.c
-	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< -o $@ $(ALL_LDFLAGS)
 
 %.o:	$(SRCDIR)/netfilter/%.c
-	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< -o $@ $(ALL_LDFLAGS)
 
 print-%:
 	@echo "$* = $($*)"
