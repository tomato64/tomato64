--- pppd/pppd/options.c
+++ pppd/pppd/options.c
@@ -121,6 +121,7 @@
 bool	tune_kernel;		/* may alter kernel settings */
 int	connect_delay = 1000;	/* wait this many ms after connect script */
 int	req_unit = -1;		/* requested interface unit */
+int	req_minunit = -1;	/* requested minimal interface unit */
 char	path_net_init[MAXPATHLEN]; /* pathname of net-init script */
 char	path_net_preup[MAXPATHLEN];/* pathname of net-pre-up script */
 char	path_net_down[MAXPATHLEN]; /* pathname of net-down script */
@@ -310,6 +311,9 @@
     { "unit", o_int, &req_unit,
       "PPP interface unit number to use if possible",
       OPT_PRIO | OPT_LLIMIT, 0, 0 },
+    { "minunit", o_int, &req_minunit,
+      "PPP interface minimal unit number",
+      OPT_PRIO | OPT_LLIMIT, 0, 0 },
 
     { "ifname", o_string, req_ifname,
       "Set PPP interface name",
--- pppd/pppd/pppd.h
+++ pppd/pppd/pppd.h
@@ -63,6 +63,7 @@
 #define MAXARGS		1	/* max # args to a command */
 #define MAXNAMELEN	256	/* max length of hostname or name for auth */
 #define MAXSECRETLEN	256	/* max length of password or secret */
+#define MAXUNIT		255	/* max ppp interface */
 
 
 /*
--- pppd/pppd/pppd-private.h
+++ pppd/pppd/pppd-private.h
@@ -196,6 +196,7 @@
 extern int	connect_delay;	/* Time to delay after connect script */
 extern int	max_data_rate;	/* max bytes/sec through charshunt */
 extern int	req_unit;	/* interface unit number to use */
+extern int	req_minunit;	/* interface minimal unit number to use */
 extern char	path_net_init[]; /* pathname of net-init script */
 extern char	path_net_preup[];/* pathname of net-pre-up script */
 extern char	path_net_down[]; /* pathname of net-down script */
--- pppd/pppd/sys-linux.c
+++ pppd/pppd/sys-linux.c
@@ -925,18 +925,15 @@
 		return -1;
 	}
 
-	ifunit = req_unit;
-	x = ioctl(ppp_dev_fd, PPPIOCNEWUNIT, &ifunit);
-	if (x < 0 && req_unit >= 0 && errno == EEXIST) {
-		warn("Couldn't allocate PPP unit %d as it is already in use", req_unit);
-		ifunit = -1;
+	ifunit = (req_unit >= 0) ? req_unit : req_minunit;
+	do {
 		x = ioctl(ppp_dev_fd, PPPIOCNEWUNIT, &ifunit);
-	}
-	if (x < 0 && errno == EEXIST) {
-		srand(time(NULL) * getpid());
-		ifunit = rand() % 10000;
-		x = ioctl(ppp_dev_fd, PPPIOCNEWUNIT, &ifunit);
-	}
+		if (x < 0 && errno == EEXIST) {
+			warn("Couldn't allocate PPP unit %d as it is already in use", ifunit);
+			ifunit = (req_unit >= 0) ? -1 : ++req_minunit;
+		} else break;
+	} while (ifunit < MAXUNIT);
+
 	if (x < 0)
 		error("Couldn't create new ppp unit: %m");
 
