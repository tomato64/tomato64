#!/bin/sh

if [ $# -eq 0 ]; then
	echo "missing .tzst file argument"
	exit
fi

if ! df -h / | grep -q "overlay"; then
	mount -o remount,rw /
	result=$?
	if [ "$result" -ne 0 ]; then
		printf 'error code "%d", unable to mount the filesystem as read/write' "$result"
		exit
	fi
fi

tar --touch -I "zstd -f" -xf $1 -C /
result=$?
if [ "$result" -ne 0 ]; then
	printf 'error code "%d" returned during extraction' "$result"
	exit
else
	if df -h / | grep -q "overlay"; then
		printf "image successfully flashed\n"
	fi
fi

if [ -f /boot/bzImage ]; then
	kernel=`file -bL /boot/bzImage  | sed 's/.*version //;s/ .*//'`
	for dir in /lib/modules/*; do
		[ "$dir" = "/lib/modules/$kernel" ] && continue
		rm -rf "$dir"
	done
	printf "image successfully flashed\n"
fi

if [ -f /boot/glinet_gl-mt6000-kernel.bin ]; then

	export EMMC_KERNEL_BLOCKS=$(($(dd if=/boot/glinet_gl-mt6000-kernel.bin of=/dev/mmcblk0p6 bs=512 2>&1 | grep "records out" | cut -d' ' -f1)))

	result=$?
	if [ "$result" -ne 0 ]; then
		printf 'error code "%d" returned during kernel write' "$result"
		exit
	fi

	dd if=/dev/zero of=/dev/mmcblk0p6 bs=512 seek=$EMMC_KERNEL_BLOCKS count=8 >/dev/null 2>&1

	result=$?
	if [ "$result" -ne 0 ]; then
		printf 'error code "%d" returned during kernel padding write' "$result"
		exit
	fi

	kernel=$(strings /boot/glinet_gl-mt6000-kernel.bin | grep -i "Linux-" | awk '{print $3}' | sed "s/.*-//")
	for dir in /lib/modules/*; do
		[ "$dir" = "/lib/modules/$kernel" ] && continue
		rm -rf "$dir"
	done
	printf "image successfully flashed\n"
fi
